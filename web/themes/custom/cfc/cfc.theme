<?php

use Drupal;
use Drupal\taxonomy\Entity\Term;
use Drupal\views\ViewExecutable;
use Drupal\Core\Menu\MenuTreeParameters;

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function cfc_preprocess_page(array &$variables)
{

}
function cfc_preprocess(&$variables, $hook)
{
  $route_name = \Drupal::routeMatch()->getRouteName();
  $request = \Drupal::request();
  $route_name = \Drupal::routeMatch()->getRouteName();

  $currentLanguageCode = \Drupal::languageManager()
    ->getCurrentLanguage()
    ->getId();
  $currentLanguageCode = \Drupal::languageManager()
    ->getCurrentLanguage()
    ->getId();

  $variables['language_id'] = $currentLanguageCode;
  $variables['language_name'] = \Drupal::languageManager()->getCurrentLanguage()->getName();
  $variables['language_id'] = $currentLanguageCode;
  $variables['language_name'] = \Drupal::languageManager()->getCurrentLanguage()->getName();

  $variables['route_name'] = $route_name;


}
// function cfc_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
// // dump($form_id);
//   if ($form_id == 'webform_submission_contact_add_form') {
//     // dump($form['actions']['submit']['#submit']);
//     $form['actions']['submit']['#submit'][0] = 'confirmation_message_form_submit';
//   }
// }

// /**
//  * Custom submit handler for the form.
//  */
// function confirmation_message_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
//   // die("test");
//   // $image_url = file_create_url('public://image.jpg');

//   $message = [
//     '#markup' => '<div class="confirmation-message"><p>Thank you for your submission!</p>' .
//                  '<img src="" alt="Confirmation Image" /></div>',
//   ];

//   \Drupal::messenger()->addStatus(\Drupal::service('renderer')->render($message));
// }
/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function cfc_preprocess_block(array &$variables) {
  // Check if the block is from a view.
  if (!empty($variables['elements']['#view'])) {
    // Print the name of the hook for the block being rendered.
    if (module_exists('devel')) {
      dpm('Block hook: ' . __FUNCTION__); // Display the hook name.
      dpm($variables); // Optionally display the block variables.
    }
  }
}
function cfc_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  return [
    'views_view__' . $variables['view']->id()
  ];
}
/**
 * Implements hook_preprocess_HOOK() for page templates.
 */

